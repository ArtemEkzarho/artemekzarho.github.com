{"version":3,"sources":["types/index.ts","components/AppHeader/index.tsx","components/SearchPanel/index.tsx","components/TodoListItem/index.tsx","components/TodoList/index.tsx","components/ItemStatusFilter/index.tsx","components/ItemAddForm/index.tsx","components/App/data.ts","components/App/useFilters.ts","components/App/index.tsx","components/App/useActions.ts","index.tsx"],"names":["Filter","AppHeader","toDo","done","className","SearchPanel","searchTerm","setSearchTerm","type","placeholder","value","onChange","e","target","TodoListItem","label","important","onDeleteted","onToggleDone","onToggleImportant","onClick","TodoList","todos","map","id","rest","Button","filter","btnFilter","setFilter","title","isActive","ItemStatusFilter","All","Active","Done","Important","ItemAddForm","onAdded","useState","setLabel","onSubmit","ev","preventDefault","disabled","length","todoData","nanoid","isRightTodo","el","isRight","toLocaleLowerCase","includes","App","reduce","acc","setTodos","addItem","text","deleteItem","toggleProperty","prop","todo","useActions","Number","filteredTodos","useFilters","Object","values","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.67d9e66c.chunk.js","sourcesContent":["export type Todo = {\n  id: string;\n  label: string;\n  important: boolean;\n  done: boolean;\n};\n\nexport enum Filter {\n  All = 0,\n  Active = 1,\n  Done = 2,\n  Important = 3,\n}\n","import React, { FC } from 'react';\nimport './styles.css';\n\ntype AppHeaderProps = {\n  toDo: number;\n  done: number;\n};\n\nconst AppHeader: FC<AppHeaderProps> = ({ toDo, done }) => (\n  <div className=\"app-header d-flex\">\n    <h1>Todo List</h1>\n    <h2>\n      {toDo} more to do, {done} done\n    </h2>\n  </div>\n);\n\nexport default AppHeader;\n","import React, { FC } from 'react';\nimport './styles.css';\n\ntype SearchPanelProps = {\n  searchTerm: string;\n  setSearchTerm: (term: string) => void;\n};\n\nconst SearchPanel: FC<SearchPanelProps> = ({ searchTerm, setSearchTerm }) => (\n  <input\n    type=\"text\"\n    className=\"form-control search-input\"\n    placeholder=\"type to search\"\n    value={searchTerm}\n    onChange={e => setSearchTerm(e.target.value)}\n  />\n);\n\nexport default SearchPanel;\n","import React, { FC } from 'react';\nimport './styles.css';\n\ntype TodoListItemProps = {\n  label: string;\n  important: boolean;\n  done: boolean;\n  onDeleteted: () => void;\n  onToggleDone: () => void;\n  onToggleImportant: () => void;\n};\n\nconst TodoListItem: FC<TodoListItemProps> = ({\n  label,\n  important,\n  done,\n  onDeleteted,\n  onToggleDone,\n  onToggleImportant,\n}) => {\n  return (\n    <span className={`todo-list-item ${done ? 'done' : ''} ${important ? 'important' : ''}`}>\n      <span className=\"todo-list-item-label\" onClick={onToggleDone}>\n        {label}\n      </span>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-success btn-sm float-right\"\n        onClick={onToggleImportant}\n      >\n        <i className=\"fa fa-exclamation\" />\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-danger btn-sm float-right\"\n        onClick={onDeleteted}\n      >\n        <i className=\"fa fa-trash-o\" />\n      </button>\n    </span>\n  );\n};\n\nexport default TodoListItem;\n","import React, { FC } from 'react';\n\nimport TodoListItem from '../TodoListItem';\nimport './styles.css';\nimport { Todo } from '../../types';\n\ntype TodoListProps = {\n  todos: Todo[];\n  onDeleteted: (id: string) => void;\n  onToggleDone: (id: string) => void;\n  onToggleImportant: (id: string) => void;\n};\n\nconst TodoList: FC<TodoListProps> = ({ todos, onDeleteted, onToggleDone, onToggleImportant }) => (\n  <ul className=\"list-group todo-list\">\n    {todos.map(({ id, ...rest }) => (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n          {...rest}\n          onDeleteted={() => onDeleteted(id)}\n          onToggleDone={() => onToggleDone(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React, { FC } from 'react';\nimport './styles.css';\n\nimport { Filter } from '../../types';\n\ntype ItemStatusFilterProps = {\n  filter: Filter;\n  setFilter: (filter: Filter) => void;\n};\n\ntype ButtonProps = {\n  filter: Filter;\n  btnFilter: Filter;\n  setFilter: (filter: Filter) => void;\n  title: string;\n};\n\nconst Button: FC<ButtonProps> = ({ filter, btnFilter, setFilter, title }) => {\n  const isActive = (btnFilter: Filter) => btnFilter === filter;\n\n  return (\n    <button\n      type=\"button\"\n      className={`btn ${isActive(btnFilter) ? 'btn-info' : 'btn-outline-secondary'}`}\n      onClick={() => setFilter(btnFilter)}\n    >\n      {title}\n    </button>\n  );\n};\n\nconst ItemStatusFilter: FC<ItemStatusFilterProps> = ({ filter, setFilter }) => {\n  return (\n    <div className=\"btn-group\">\n      <Button filter={filter} btnFilter={Filter.All} setFilter={setFilter} title=\"All\" />\n      <Button filter={filter} btnFilter={Filter.Active} setFilter={setFilter} title=\"Active\" />\n      <Button filter={filter} btnFilter={Filter.Done} setFilter={setFilter} title=\"Done\" />\n      <Button\n        filter={filter}\n        btnFilter={Filter.Important}\n        setFilter={setFilter}\n        title=\"Important\"\n      />\n    </div>\n  );\n};\n\nexport default ItemStatusFilter;\n","import React, { FC, useState } from 'react';\nimport './styles.css';\n\ntype ItemAddFormProps = {\n  onAdded: (text: string) => void;\n};\n\nconst ItemAddForm: FC<ItemAddFormProps> = ({ onAdded }) => {\n  const [label, setLabel] = useState('');\n\n  return (\n    <form\n      className=\"item-add-form d-flex\"\n      onSubmit={ev => {\n        ev.preventDefault();\n        onAdded(label);\n        setLabel('');\n      }}\n    >\n      <input\n        type=\"text\"\n        value={label}\n        className=\"form-control\"\n        onChange={ev => setLabel(ev.target.value)}\n        placeholder=\"What needs to be done\"\n      />\n      <button className=\"btn btn-outline-secondary\" disabled={label.length === 0}>\n        Add Item\n      </button>\n    </form>\n  );\n};\n\nexport default ItemAddForm;\n","import { nanoid } from 'nanoid';\n\nexport const todoData = [\n  { label: 'Drink coffee', important: false, done: false, id: nanoid() },\n  { label: 'Make Awesome app', important: true, done: false, id: nanoid() },\n  { label: 'Have lunch', important: false, done: true, id: nanoid() },\n];\n","import { useState } from 'react';\nimport { Filter, Todo } from '../../types';\n\nconst isRightTodo = (el: Todo, filter: Filter, searchTerm: string) => {\n  let isRight = true;\n  switch (filter) {\n    case Filter.Active:\n      isRight = !el.done;\n      break;\n    case Filter.Done:\n      isRight = el.done;\n      break;\n    case Filter.Important:\n      isRight = el.important;\n      break;\n    default:\n      isRight = true;\n      break;\n  }\n\n  return searchTerm.length > 0\n    ? el.label.toLocaleLowerCase().includes(searchTerm.toLocaleLowerCase()) && isRight\n    : isRight;\n};\n\nexport const useFilters = (todos: Todo[]) => {\n  const [filter, setFilter] = useState(Filter.All);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const { toDo, done, filteredTodos } = todos.reduce(\n    (acc, el) => {\n      return {\n        toDo: acc.toDo + Number(!el.done),\n        done: acc.done + Number(el.done),\n        filteredTodos: isRightTodo(el, filter, searchTerm)\n          ? [...acc.filteredTodos, el]\n          : acc.filteredTodos,\n      };\n    },\n    {\n      toDo: 0,\n      done: 0,\n      filteredTodos: [],\n    } as {\n      toDo: number;\n      done: number;\n      filteredTodos: Todo[];\n    },\n  );\n\n  return {\n    toDo,\n    done,\n    setFilter,\n    filter,\n    setSearchTerm,\n    searchTerm,\n    filteredTodos,\n  };\n};\n","import React, { FC } from 'react';\nimport AppHeader from '../AppHeader';\nimport SearchPanel from '../SearchPanel';\nimport TodoList from '../TodoList';\nimport ItemStatusFilter from '../ItemStatusFilter';\nimport ItemAddForm from '../ItemAddForm';\nimport { useActions } from './useActions';\nimport { useFilters } from './useFilters';\n\nimport './styles.css';\n\nconst App: FC = () => {\n  const { todos, addItem, deleteItem, toggleProperty } = useActions();\n  const { toDo, done, setFilter, filter, setSearchTerm, searchTerm, filteredTodos } = useFilters(\n    Object.values(todos),\n  );\n\n  return (\n    <div className=\"todo-app\">\n      <AppHeader toDo={toDo} done={done} />\n      <div className=\"top-panel d-flex\">\n        <SearchPanel searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n        <ItemStatusFilter filter={filter} setFilter={setFilter} />\n      </div>\n\n      <TodoList\n        todos={filteredTodos}\n        onDeleteted={deleteItem}\n        onToggleDone={toggleProperty('done')}\n        onToggleImportant={toggleProperty('important')}\n      />\n      <ItemAddForm onAdded={addItem} />\n    </div>\n  );\n};\n\nexport default App;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { Todo } from '../../types';\nimport { todoData } from './data';\n\nimport './styles.css';\n\nexport const useActions = () => {\n  const [todos, setTodos] = useState(\n    todoData.reduce((acc, el) => ({ ...acc, [el.id]: el }), {} as Record<string, Todo>),\n  );\n\n  const deleteItem = (id: string) => {\n    const { [id]: remove, ...rest } = todos;\n    setTodos(rest);\n  };\n\n  const addItem = (text: string) => {\n    const id = nanoid();\n\n    setTodos({\n      ...todos,\n      [id]: {\n        label: text,\n        important: false,\n        done: false,\n        id,\n      },\n    });\n  };\n\n  const toggleProperty = (prop: 'done' | 'important') => (id: string) => {\n    const todo = todos[id];\n    setTodos({\n      ...todos,\n      [todo.id]: {\n        ...todo,\n        [prop]: !todo[prop],\n      },\n    });\n  };\n\n  return {\n    todos,\n    addItem,\n    deleteItem,\n    toggleProperty,\n  };\n};\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './components/App';\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}